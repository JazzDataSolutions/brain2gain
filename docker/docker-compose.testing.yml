# Testing Environment Docker Compose Configuration
# Optimized for automated testing with test databases and clean environments
# Usage: docker-compose -f docker-compose.testing.yml up

include:
  - docker-compose.base.yml

services:
  # ═══════════════════════════════════════════════════════════════════
  # DATABASE OVERRIDES FOR TESTING
  # ═══════════════════════════════════════════════════════════════════

  postgres:
    environment:
      POSTGRES_DB: brain2gain_test
      POSTGRES_USER: brain2gain_test
      POSTGRES_PASSWORD: TestPassword123!
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ./database/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    command: |
      postgres
      -c log_statement=all
      -c log_destination=stderr
      -c shared_preload_libraries=pg_stat_statements
    healthcheck:
      interval: 3s
      timeout: 2s
      retries: 5

  redis:
    command: redis-server --appendonly no --requirepass TestRedisPass123! --save ""
    environment:
      REDIS_PASSWORD: TestRedisPass123!
    volumes: []  # No persistence for testing
    healthcheck:
      interval: 3s
      timeout: 2s
      retries: 3

  # ═══════════════════════════════════════════════════════════════════
  # APPLICATION SERVICES - TESTING
  # ═══════════════════════════════════════════════════════════════════

  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: brain2gain-backend-test
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:8000"
    environment:
      # Test settings
      - ENVIRONMENT=testing
      - DEBUG=false
      - LOG_LEVEL=WARNING
      - PYTHONPATH=/app
      
      # Database (test)
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=brain2gain_test
      - POSTGRES_USER=brain2gain_test
      - POSTGRES_PASSWORD=TestPassword123!
      
      # Redis (test)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=TestRedisPass123!
      
      # Email (mock)
      - SMTP_HOST=mailcatcher
      - SMTP_PORT=1025
      - SMTP_TLS=false
      - EMAILS_FROM_EMAIL=test@brain2gain.test
      
      # Test-specific settings
      - SECRET_KEY=test-secret-key-not-for-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - BACKEND_CORS_ORIGINS=["http://localhost:5174", "http://frontend-test:5173"]
    volumes:
      - ./backend/app:/app/app:ro
      - ./backend/tests:/app/tests:ro
      - ./backend/alembic.ini:/app/alembic.ini:ro
      - ./backend/pyproject.toml:/app/pyproject.toml:ro
      - test_coverage:/app/htmlcov:rw
    command: >
      sh -c "
        echo '🧪 Setting up test environment...' &&
        uv sync --dev &&
        echo '⏳ Waiting for test database...' &&
        python -c \"
import time
import psycopg2
for i in range(20):
    try:
        conn = psycopg2.connect(
            host='postgres',
            database='brain2gain_test',
            user='brain2gain_test',
            password='TestPassword123!'
        )
        conn.close()
        print('✅ Test database connected!')
        break
    except Exception as e:
        print(f'🔄 Attempt {i+1}: {e}')
        time.sleep(1)
else:
    print('❌ Could not connect to test database')
    exit(1)
        \" &&
        echo '🗃️  Running test migrations...' &&
        alembic upgrade head &&
        echo '🚀 Starting test server...' &&
        fastapi run app/main.py --host 0.0.0.0 --port 8000
      "
    networks:
      - brain2gain-network

  frontend-test:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: brain2gain-frontend-test
    depends_on:
      - backend-test
    ports:
      - "5174:5173"
    environment:
      - VITE_API_URL=http://backend-test:8000
      - VITE_ENVIRONMENT=testing
      - VITE_HOT_RELOAD=false
      - NODE_ENV=test
    volumes:
      - ./frontend/src:/app/src:ro
      - ./frontend/tests:/app/tests:ro
      - ./frontend/test-results:/app/test-results:rw
    command: npm run build && npm run preview -- --host 0.0.0.0 --port 5173
    networks:
      - brain2gain-network

  # ═══════════════════════════════════════════════════════════════════
  # TESTING TOOLS
  # ═══════════════════════════════════════════════════════════════════

  mailcatcher:
    image: schickling/mailcatcher
    container_name: brain2gain-mailcatcher-test
    ports:
      - "1081:1080"  # Different port to avoid conflicts
      - "1026:1025"
    networks:
      - brain2gain-network

  # Test runners
  pytest-runner:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: brain2gain-pytest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - ENVIRONMENT=testing
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=brain2gain_test
      - POSTGRES_USER=brain2gain_test
      - POSTGRES_PASSWORD=TestPassword123!
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=TestRedisPass123!
    volumes:
      - ./backend:/app:ro
      - test_coverage:/app/htmlcov:rw
      - ./backend/test-results:/app/test-results:rw
    working_dir: /app
    command: >
      sh -c "
        echo '🧪 Running backend tests...' &&
        uv sync --dev &&
        alembic upgrade head &&
        python -m pytest tests/ --cov=app --cov-report=html --cov-report=term --cov-report=xml -v --tb=short --junitxml=test-results/pytest.xml
      "
    networks:
      - brain2gain-network
    profiles:
      - testing

  playwright-runner:
    build:
      context: ./frontend
      dockerfile: Dockerfile.playwright
    container_name: brain2gain-playwright
    depends_on:
      - backend-test
      - frontend-test
      - mailcatcher
    environment:
      - VITE_API_URL=http://backend-test:8000
      - MAILCATCHER_HOST=http://mailcatcher:1080
      - PLAYWRIGHT_HTML_HOST=0.0.0.0
      - CI=true
    volumes:
      - ./frontend/tests:/app/tests:ro
      - ./frontend/test-results:/app/test-results:rw
      - ./frontend/playwright-report:/app/playwright-report:rw
    working_dir: /app
    command: >
      sh -c "
        echo '🎭 Running E2E tests...' &&
        npm ci &&
        npx playwright install --with-deps &&
        npx playwright test --reporter=html --output-dir=test-results
      "
    networks:
      - brain2gain-network
    profiles:
      - testing

volumes:
  postgres_test_data:
    driver: local
    name: brain2gain_postgres_test_data
  test_coverage:
    driver: local
    name: brain2gain_test_coverage