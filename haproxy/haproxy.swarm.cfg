# HAProxy Configuration for Brain2Gain Docker Swarm
# High availability load balancer with health checks

global
    maxconn 4096
    log stdout local0
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # SSL/TLS configuration
    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    mode http
    log global
    option httplog
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    option redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

# Statistics page
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats show-legends
    stats show-node

# Frontend configuration
frontend brain2gain_frontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/brain2gain.pem
    
    # Redirect HTTP to HTTPS
    redirect scheme https if !{ ssl_fc }
    
    # Security headers
    http-response set-header X-Frame-Options DENY
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header Strict-Transport-Security "max-age=31536000"
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request reject if { sc_http_req_rate(0) gt 20 }
    
    # Routing rules
    acl is_api path_beg /api/
    acl is_websocket path_beg /ws
    acl is_health path /health
    
    # Route to appropriate backend
    use_backend brain2gain_api if is_api
    use_backend brain2gain_websocket if is_websocket
    use_backend brain2gain_health if is_health
    default_backend brain2gain_web

# Backend for web frontend
backend brain2gain_web
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    
    # Frontend servers (discovered via Docker Swarm DNS)
    server-template frontend 10 tasks.brain2gain_frontend:80 check resolvers docker init-addr none

# Backend for API
backend brain2gain_api
    balance roundrobin
    option httpchk GET /api/v1/utils/health-check/
    http-check expect status 200
    
    # Backend API servers
    server-template backend 10 tasks.brain2gain_backend:8000 check resolvers docker init-addr none

# Backend for WebSocket connections
backend brain2gain_websocket
    balance source
    option httpchk GET /api/v1/utils/health-check/
    http-check expect status 200
    
    # WebSocket servers (sticky sessions)
    server-template websocket 10 tasks.brain2gain_backend:8000 check resolvers docker init-addr none

# Health check backend
backend brain2gain_health
    http-request return status 200 content-type application/json string '{"status":"healthy","timestamp":"2025-06-30T12:00:00Z"}'

# Docker Swarm service discovery
resolvers docker
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry 1s
    hold other 10s
    hold refused 10s
    hold nx 10s
    hold timeout 10s
    hold valid 10s
    hold obsolete 10s