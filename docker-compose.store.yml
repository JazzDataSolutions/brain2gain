# ============================================================================
# Docker Compose - Store Mode (Solo Tienda E-commerce)
# Configuración específica para el frontend público de la tienda
# ============================================================================

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-brain2gain_store}
      - POSTGRES_USER=${POSTGRES_USER:-brain2gain_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_store_data:/var/lib/postgresql/data
    networks:
      - store-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-brain2gain_user} -d ${POSTGRES_DB:-brain2gain_store}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_store_data:/data
    networks:
      - store-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API - Modo Público
  store-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - APP_MODE=store
    restart: unless-stopped
    environment:
      # Configuración del modo store
      - API_MODE=public
      - ENABLE_ADMIN_ROUTES=false
      - ENABLE_STORE_ROUTES=true
      
      # Base de datos
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-brain2gain_store}
      - POSTGRES_USER=${POSTGRES_USER:-brain2gain_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      
      # Configuración general
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - BACKEND_CORS_ORIGINS=${STORE_CORS_ORIGINS:-http://localhost:3000,https://store.brain2gain.com}
      
      # Deshabilitado para modo store
      - FIRST_SUPERUSER=
      - EMAILS_FROM_EMAIL=${EMAILS_FROM_EMAIL}
      
      # Rate limiting específico para tienda
      - RATE_LIMIT_STORE=100/minute
      - RATE_LIMIT_CART=50/minute
      - RATE_LIMIT_CHECKOUT=10/hour
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - store-network
    ports:
      - "${STORE_API_PORT:-8000}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend - Solo Tienda
  store-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_APP_MODE=store
        - VITE_API_URL=${STORE_API_URL:-http://localhost:8000}
        - NODE_ENV=production
    restart: unless-stopped
    environment:
      # Configuración específica de la tienda
      - VITE_API_URL=${STORE_API_URL:-http://localhost:8000}
      - VITE_ENABLE_ADMIN=false
      - VITE_ENABLE_STORE=true
      - VITE_APP_NAME=Brain2Gain Store
      - VITE_PAYMENT_ENABLED=true
      - VITE_ANALYTICS_ID=${STORE_ANALYTICS_ID}
    depends_on:
      - store-api
    networks:
      - store-network
    ports:
      - "${STORE_PORT:-3000}:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.store.rule=Host(`${STORE_DOMAIN:-store.brain2gain.com}`)"
      - "traefik.http.routers.store.entrypoints=websecure"
      - "traefik.http.routers.store.tls.certresolver=le"
      - "traefik.http.services.store.loadbalancer.server.port=80"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  store-network:
    driver: bridge
    name: brain2gain_store_network

volumes:
  postgres_store_data:
    name: brain2gain_store_postgres
  redis_store_data:
    name: brain2gain_store_redis