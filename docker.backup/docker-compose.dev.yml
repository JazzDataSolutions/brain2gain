# Development Docker Compose Configuration
# Optimized for team development with hot reload and shared volumes
# Usage: docker-compose -f docker-compose.dev.yml up

include:
  - docker-compose.base.yml

services:
  # Override base postgres for development
  postgres:
    ports:
      - "5433:5432"  # Use different port to avoid conflicts
    environment:
      POSTGRES_DB: brain2gain_dev
      POSTGRES_USER: brain2gain_dev
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-DevPassword123!}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    healthcheck:
      interval: 5s
      timeout: 3s
      retries: 3

  # Override base redis for development
  redis:
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-DevRedisPass123!}
    healthcheck:
      interval: 5s
      timeout: 3s
      retries: 3

  # ─── BACKEND API (Development) ────────────────────────────────────────────
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: brain2gain-backend-dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # Development settings
      - ENVIRONMENT=development
      - DEBUG=true
      - PYTHONPATH=/app
      
      # Database (development)
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=brain2gain_dev
      - POSTGRES_USER=brain2gain_dev
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-DevPassword123!}
      
      # Redis (development)
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-DevRedisPass123!}
      
      # Email (use mailcatcher)
      - SMTP_HOST=mailcatcher-dev
      - SMTP_PORT=1025
      - SMTP_TLS=false
      - EMAILS_FROM_EMAIL=noreply@brain2gain.local
      
      # CORS (permissive for development)
      - BACKEND_CORS_ORIGINS=["http://localhost:5173", "http://127.0.0.1:5173", "http://localhost:3000"]
    volumes:
      # Hot reload for development
      - ./backend/app:/app/app:rw
      - ./backend/alembic.ini:/app/alembic.ini:ro
      - ./backend/pyproject.toml:/app/pyproject.toml:ro
      - ./backend/uv.lock:/app/uv.lock:ro
      # Coverage reports
      - ./backend/htmlcov:/app/htmlcov:rw
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Starting development server with hot reload...' &&
        fastapi dev app/main.py --host 0.0.0.0 --port 8000
      "
    networks:
      - brain2gain-network

  # ─── FRONTEND APPLICATION (Development) ────────────────────────────────
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: brain2gain-frontend-dev
    depends_on:
      - backend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_ENVIRONMENT=development
      - VITE_HOT_RELOAD=true
    volumes:
      # Hot reload for development
      - ./frontend/src:/app/src:rw
      - ./frontend/public:/app/public:rw
      - ./frontend/index.html:/app/index.html:rw
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/vite.config.ts:/app/vite.config.ts:ro
      - ./frontend/tailwind.config.js:/app/tailwind.config.js:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
      # Node modules cache
      - frontend_node_modules:/app/node_modules
    command: npm run dev -- --host 0.0.0.0
    networks:
      - brain2gain-network

  # ─── DEVELOPMENT TOOLS ───────────────────────────────────────────────────
  mailcatcher-dev:
    image: schickling/mailcatcher
    container_name: brain2gain-mailcatcher-dev
    ports:
      - "1080:1080"  # Web UI
      - "1025:1025"  # SMTP server
    networks:
      - brain2gain-network
    profiles:
      - tools

  # Override adminer for development
  adminer:
    ports:
      - "8080:8080"
    profiles:
      - tools

  # Testing environment
  playwright:
    build:
      context: ./frontend
      dockerfile: Dockerfile.playwright
      args:
        - VITE_API_URL=http://backend:8000
        - NODE_ENV=development
    container_name: brain2gain-playwright
    depends_on:
      - backend
      - mailcatcher-dev
    environment:
      - VITE_API_URL=http://backend:8000
      - MAILCATCHER_HOST=http://mailcatcher:1080
      - PLAYWRIGHT_HTML_HOST=0.0.0.0
      - CI=${CI:-false}
    volumes:
      - ./frontend/tests:/app/tests:rw
      - ./frontend/test-results:/app/test-results:rw
      - ./frontend/playwright-report:/app/playwright-report:rw
    ports:
      - "9323:9323"  # Playwright UI
    networks:
      - brain2gain-network
    profiles:
      - testing

volumes:
  postgres_dev_data:
    driver: local
    name: brain2gain_postgres_dev_data
  frontend_node_modules:
    driver: local
    name: brain2gain_frontend_node_modules

