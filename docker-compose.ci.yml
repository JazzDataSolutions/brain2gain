# CI/CD Docker Compose Configuration
# For GitHub Actions automated testing and E2E validation

services:
  # PostgreSQL Database for CI
  postgres-ci:
    image: postgres:17-alpine
    container_name: brain2gain-postgres-ci
    environment:
      POSTGRES_DB: brain2gain_test
      POSTGRES_USER: brain2gain_test
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ./database/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brain2gain_test -d brain2gain_test"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  # Redis Cache for CI
  redis-ci:
    image: redis:7.2-alpine
    container_name: brain2gain-redis-ci
    command: redis-server --appendonly no --save ""
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  # Backend API for E2E Testing
  backend-ci:
    build:
      context: ./backend
      dockerfile: Dockerfile.ci
    container_name: brain2gain-backend-ci
    environment:
      - ENVIRONMENT=testing
      - POSTGRES_SERVER=postgres-ci
      - POSTGRES_PORT=5432
      - POSTGRES_DB=brain2gain_test
      - POSTGRES_USER=brain2gain_test
      - POSTGRES_PASSWORD=test_password
      - REDIS_HOST=redis-ci
      - REDIS_PORT=6379
      - SECRET_KEY=test-secret-key-for-ci
      - FIRST_SUPERUSER=test@brain2gain.com
      - FIRST_SUPERUSER_PASSWORD=test123456789
      - PROJECT_NAME=Brain2Gain CI Test
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://frontend-ci:3000"]
    ports:
      - "8000:8000"
    depends_on:
      postgres-ci:
        condition: service_healthy
      redis-ci:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    profiles:
      - e2e

  # Frontend for E2E Testing
  frontend-ci:
    build:
      context: ./frontend
      dockerfile: Dockerfile.ci
      args:
        - VITE_API_URL=http://backend-ci:8000
    container_name: brain2gain-frontend-ci
    environment:
      - NODE_ENV=test
      - VITE_API_URL=http://backend-ci:8000
    ports:
      - "3000:3000"
    depends_on:
      backend-ci:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    profiles:
      - e2e

  # E2E Test Runner
  e2e-tests:
    build:
      context: ./frontend
      dockerfile: Dockerfile.e2e
    container_name: brain2gain-e2e-tests
    environment:
      - PLAYWRIGHT_BASE_URL=http://frontend-ci:3000
      - API_BASE_URL=http://backend-ci:8000
    volumes:
      - ./frontend/test-results:/app/test-results
      - ./frontend/playwright-report:/app/playwright-report
    depends_on:
      frontend-ci:
        condition: service_healthy
      backend-ci:
        condition: service_healthy
    profiles:
      - e2e
    command: npm run test:e2e

volumes:
  postgres_ci_data:
  redis_ci_data:

networks:
  default:
    name: brain2gain_ci_network