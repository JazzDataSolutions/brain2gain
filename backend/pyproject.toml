[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.114.2",
    "python-multipart<1.0.0,>=0.0.7",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.2.3",
    "pydantic>2.0",
    "emails<1.0,>=0.6",
    "jinja2<4.0.0,>=3.1.4",
    "alembic<2.0.0,>=1.12.1",
    "httpx<1.0.0,>=0.25.1",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "sqlmodel<1.0.0,>=0.0.21",
    # Pin bcrypt until passlib supports the latest
    "bcrypt==4.0.1",
    "pydantic-settings<3.0.0,>=2.2.1",
    "sentry-sdk[fastapi]<2.0.0,>=1.40.6",
    "pyjwt<3.0.0,>=2.8.0",
    "redis<6.0.0,>=5.0.0",
    "slowapi<1.0.0,>=0.1.9",
    "python-jose[cryptography]>=3.5.0",
    # Payment gateways
    "stripe<8.0.0,>=7.0.0",
    "aiohttp<4.0.0,>=3.9.0",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "pytest-cov<5.0.0,>=4.1.0",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
    # Enhanced testing dependencies
    "pytest-asyncio<1.0.0,>=0.21.0",
    "pytest-mock<4.0.0,>=3.11.0",
    "pytest-xdist<4.0.0,>=3.3.0",
    "factory-boy<4.0.0,>=3.3.0",
    "freezegun<2.0.0,>=1.2.0",
    "respx<1.0.0,>=0.20.0",
    "pytest-benchmark<5.0.0,>=4.0.0",
    "faker<20.0.0,>=19.0.0",
    # Database testing
    "pytest-postgresql<6.0.0,>=5.0.0",
    # Security testing
    "safety<3.0.0,>=2.3.0",
    "bandit<2.0.0,>=1.7.0",
    # Load testing
    "locust<3.0.0,>=2.15.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/tests/*",
    "app/alembic/*",
    "app/scripts/*",
    "*/conftest.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = false
precision = 2

[tool.coverage.html]
directory = "htmlcov"
title = "Brain2Gain Backend Test Coverage"

[tool.pytest.ini_options]
testpaths = ["app/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-branch",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
    "load_test: marks tests as load tests",
]
